{"ast":null,"code":"import axios from 'axios';\n\n// Base URL untuk API\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Menyimpan informasi user\nconst setUser = user => localStorage.setItem('user', JSON.stringify(user));\nconst getUser = () => {\n  const userStr = localStorage.getItem('user');\n  return userStr ? JSON.parse(userStr) : null;\n};\nconst removeUser = () => localStorage.removeItem('user');\nconst userServices = {\n  // Pendaftaran user baru\n  register: async (email, password, role = 'customer') => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, {\n        email,\n        password,\n        role\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        message: 'Terjadi kesalahan saat register'\n      };\n    }\n  },\n  // Login user\n  login: async (email, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n\n      // Simpan user data\n      setUser(response.data.user);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        message: 'Terjadi kesalahan saat login'\n      };\n    }\n  },\n  // Logout user\n  logout: () => {\n    removeUser();\n  },\n  // Mendapatkan profil user yang sedang login\n  getProfile: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/profile`);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        message: 'Terjadi kesalahan saat mengambil profil'\n      };\n    }\n  },\n  // Mendapatkan semua users (admin only)\n  getAllUsers: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/users`);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n        message: 'Terjadi kesalahan saat mengambil data users'\n      };\n    }\n  },\n  // Cek apakah user sudah login\n  isLoggedIn: () => {\n    return !!getUser();\n  },\n  // Mendapatkan user saat ini\n  getCurrentUser: () => {\n    return getUser();\n  },\n  // Cek apakah user adalah admin\n  isAdmin: () => {\n    const user = getUser();\n    return user && user.role === 'admin';\n  },\n  // Cek apakah user adalah organization\n  isOrganization: () => {\n    const user = getUser();\n    return user && user.role === 'organization';\n  },\n  // Cek apakah user adalah customer\n  isCustomer: () => {\n    const user = getUser();\n    return user && user.role === 'customer';\n  }\n};\nexport default userServices;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","setUser","user","localStorage","setItem","JSON","stringify","getUser","userStr","getItem","parse","removeUser","removeItem","userServices","register","email","password","role","response","post","data","error","_error$response","message","login","_error$response2","logout","getProfile","get","_error$response3","getAllUsers","_error$response4","isLoggedIn","getCurrentUser","isAdmin","isOrganization","isCustomer"],"sources":["C:/nodejsapp/utsbottledelivery/frontend/src/services/userServices.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL untuk API\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Menyimpan informasi user\r\nconst setUser = (user) => localStorage.setItem('user', JSON.stringify(user));\r\nconst getUser = () => {\r\n    const userStr = localStorage.getItem('user');\r\n    return userStr ? JSON.parse(userStr) : null;\r\n};\r\nconst removeUser = () => localStorage.removeItem('user');\r\n\r\nconst userServices = {\r\n    // Pendaftaran user baru\r\n    register: async (email, password, role = 'customer') => {\r\n        try {\r\n            const response = await axios.post(`${API_URL}/auth/register`, {\r\n                email,\r\n                password,\r\n                role\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Terjadi kesalahan saat register' };\r\n        }\r\n    },\r\n    \r\n    // Login user\r\n    login: async (email, password) => {\r\n        try {\r\n            const response = await axios.post(`${API_URL}/auth/login`, {\r\n                email,\r\n                password\r\n            });\r\n            \r\n            // Simpan user data\r\n            setUser(response.data.user);\r\n            \r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Terjadi kesalahan saat login' };\r\n        }\r\n    },\r\n    \r\n    // Logout user\r\n    logout: () => {\r\n        removeUser();\r\n    },\r\n    \r\n    // Mendapatkan profil user yang sedang login\r\n    getProfile: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/auth/profile`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Terjadi kesalahan saat mengambil profil' };\r\n        }\r\n    },\r\n    \r\n    // Mendapatkan semua users (admin only)\r\n    getAllUsers: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/auth/users`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Terjadi kesalahan saat mengambil data users' };\r\n        }\r\n    },\r\n    \r\n    // Cek apakah user sudah login\r\n    isLoggedIn: () => {\r\n        return !!getUser();\r\n    },\r\n    \r\n    // Mendapatkan user saat ini\r\n    getCurrentUser: () => {\r\n        return getUser();\r\n    },\r\n    \r\n    // Cek apakah user adalah admin\r\n    isAdmin: () => {\r\n        const user = getUser();\r\n        return user && user.role === 'admin';\r\n    },\r\n    \r\n    // Cek apakah user adalah organization\r\n    isOrganization: () => {\r\n        const user = getUser();\r\n        return user && user.role === 'organization';\r\n    },\r\n    \r\n    // Cek apakah user adalah customer\r\n    isCustomer: () => {\r\n        const user = getUser();\r\n        return user && user.role === 'customer';\r\n    }\r\n};\r\n\r\nexport default userServices;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,OAAO,GAAIC,IAAI,IAAKC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;AAC5E,MAAMK,OAAO,GAAGA,CAAA,KAAM;EAClB,MAAMC,OAAO,GAAGL,YAAY,CAACM,OAAO,CAAC,MAAM,CAAC;EAC5C,OAAOD,OAAO,GAAGH,IAAI,CAACK,KAAK,CAACF,OAAO,CAAC,GAAG,IAAI;AAC/C,CAAC;AACD,MAAMG,UAAU,GAAGA,CAAA,KAAMR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;AAExD,MAAMC,YAAY,GAAG;EACjB;EACAC,QAAQ,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,GAAG,UAAU,KAAK;IACpD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,GAAGtB,OAAO,gBAAgB,EAAE;QAC1DkB,KAAK;QACLC,QAAQ;QACRC;MACJ,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACZ,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI;QAAEG,OAAO,EAAE;MAAkC,CAAC;IAChF;EACJ,CAAC;EAED;EACAC,KAAK,EAAE,MAAAA,CAAOT,KAAK,EAAEC,QAAQ,KAAK;IAC9B,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,GAAGtB,OAAO,aAAa,EAAE;QACvDkB,KAAK;QACLC;MACJ,CAAC,CAAC;;MAEF;MACAf,OAAO,CAACiB,QAAQ,CAACE,IAAI,CAAClB,IAAI,CAAC;MAE3B,OAAOgB,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAI,gBAAA;MACZ,MAAM,EAAAA,gBAAA,GAAAJ,KAAK,CAACH,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBL,IAAI,KAAI;QAAEG,OAAO,EAAE;MAA+B,CAAC;IAC7E;EACJ,CAAC;EAED;EACAG,MAAM,EAAEA,CAAA,KAAM;IACVf,UAAU,CAAC,CAAC;EAChB,CAAC;EAED;EACAgB,UAAU,EAAE,MAAAA,CAAA,KAAY;IACpB,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMtB,KAAK,CAACgC,GAAG,CAAC,GAAG/B,OAAO,eAAe,CAAC;MAC3D,OAAOqB,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAQ,gBAAA;MACZ,MAAM,EAAAA,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAI;QAAEG,OAAO,EAAE;MAA0C,CAAC;IACxF;EACJ,CAAC;EAED;EACAO,WAAW,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACA,MAAMZ,QAAQ,GAAG,MAAMtB,KAAK,CAACgC,GAAG,CAAC,GAAG/B,OAAO,aAAa,CAAC;MACzD,OAAOqB,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAU,gBAAA;MACZ,MAAM,EAAAA,gBAAA,GAAAV,KAAK,CAACH,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBX,IAAI,KAAI;QAAEG,OAAO,EAAE;MAA8C,CAAC;IAC5F;EACJ,CAAC;EAED;EACAS,UAAU,EAAEA,CAAA,KAAM;IACd,OAAO,CAAC,CAACzB,OAAO,CAAC,CAAC;EACtB,CAAC;EAED;EACA0B,cAAc,EAAEA,CAAA,KAAM;IAClB,OAAO1B,OAAO,CAAC,CAAC;EACpB,CAAC;EAED;EACA2B,OAAO,EAAEA,CAAA,KAAM;IACX,MAAMhC,IAAI,GAAGK,OAAO,CAAC,CAAC;IACtB,OAAOL,IAAI,IAAIA,IAAI,CAACe,IAAI,KAAK,OAAO;EACxC,CAAC;EAED;EACAkB,cAAc,EAAEA,CAAA,KAAM;IAClB,MAAMjC,IAAI,GAAGK,OAAO,CAAC,CAAC;IACtB,OAAOL,IAAI,IAAIA,IAAI,CAACe,IAAI,KAAK,cAAc;EAC/C,CAAC;EAED;EACAmB,UAAU,EAAEA,CAAA,KAAM;IACd,MAAMlC,IAAI,GAAGK,OAAO,CAAC,CAAC;IACtB,OAAOL,IAAI,IAAIA,IAAI,CAACe,IAAI,KAAK,UAAU;EAC3C;AACJ,CAAC;AAED,eAAeJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}